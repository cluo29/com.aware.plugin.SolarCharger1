{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue128;\red204\green120\blue50;\red128\green128\blue128;
\red102\green14\blue122;\red0\green128\blue0;\red0\green0\blue255;\red128\green128\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20380\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\b\fs24 \cf2 package 
\f1\b0 \cf0 com.aware.plugin.SolarCharger1\cf3 ;\uc0\u8232 \u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.content.Intent\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.util.Log\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.media.MediaPlayer\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.net.Uri\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.app.IntentService\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.app.AlarmManager\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.app.PendingIntent\cf3 ;\uc0\u8232 \u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.Aware\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.Aware_Preferences\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.utils.Aware_Plugin\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.plugin.SolarCharger1.Provider.SolarCharger1_Data\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.providers.Battery_Provider.Battery_Charges\cf3 ;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 com.aware.providers.Battery_Provider.Battery_Data\cf3 ;\uc0\u8232 \u8232 
\f0\b \cf2 public class 
\f1\b0 \cf0 Plugin 
\f0\b \cf2 extends 
\f1\b0 \cf0 Aware_Plugin \{\uc0\u8232 \u8232     
\f2\i \cf4 //ACTION_AWARE_PLUGIN_SOLAR_CHARGER1\uc0\u8232 \u8232     
\f0\i0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 ACTION_AWARE_PLUGIN_SOLAR_CHARGER1 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "ACTION_AWARE_PLUGIN_SOLAR_CHARGER1"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 EXTRA_CHARGER_TYPE 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "CHARGER_TYPE"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 EXTRA_PERCENTAGE_START 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "PERCENTAGE_START"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 EXTRA_PERCENTAGE_END 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "PERCENTAGE_END"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 EXTRA_TIME_START 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "TIME_START"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static final 
\f1\b0 \cf0 String 
\f3\i\b \cf5 EXTRA_TIME_END 
\f1\i0\b0 \cf0 = 
\f0\b \cf6 "TIME_END"
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private static double 
\f2\i\b0 \cf5 charger_type 
\f1\i0 \cf0 = \cf7 0\cf3 ; 
\f2\i \cf4 //1=solar, 2= pc ,3=ac\uc0\u8232 \u8232     
\f0\i0\b \cf2 private static double 
\f2\i\b0 \cf5 percentage_start 
\f1\i0 \cf0 = \cf7 0\cf3 ; 
\f2\i \cf4 // shall be 0 - 100\uc0\u8232 \u8232     
\f0\i0\b \cf2 private static double 
\f2\i\b0 \cf5 percentage_end 
\f1\i0 \cf0 = \cf7 0\cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private static double 
\f2\i\b0 \cf5 time_start 
\f1\i0 \cf0 = \cf7 0\cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private static double 
\f2\i\b0 \cf5 time_end 
\f1\i0 \cf0 = \cf7 0\cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private static double 
\f2\i\b0 \cf5 play 
\f1\i0 \cf0 = \cf7 0\cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 public static 
\f1\b0 \cf0 ContextProducer 
\f2\i \cf5 context_producer
\f1\i0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private static 
\f1\b0 \cf0 MediaPlayer 
\f2\i \cf5 mp
\f1\i0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private 
\f1\b0 \cf0 AlarmManager 
\f0\b \cf5 alarmManager
\f1\b0 \cf3 ;\uc0\u8232 \u8232     
\f0\b \cf2 private 
\f1\b0 \cf0 PendingIntent 
\f0\b \cf5 detectTask
\f1\b0 \cf3 ;\uc0\u8232 \u8232 \u8232     \cf8 @Override\uc0\u8232     
\f0\b \cf2 public void 
\f1\b0 \cf0 onCreate() \{\uc0\u8232         
\f0\b \cf2 super
\f1\b0 \cf0 .onCreate()\cf3 ;\uc0\u8232 \u8232         
\f2\i \cf5 TAG 
\f1\i0 \cf0 = 
\f0\b \cf6 "AWARE::Solar Charger"
\f1\b0 \cf3 ;\uc0\u8232         
\f2\i \cf5 DEBUG 
\f1\i0 \cf0 = 
\f0\b \cf2 true
\f1\b0 \cf3 ;\uc0\u8232 \u8232 \u8232         \cf0 Aware.
\f2\i setSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 STATUS_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf3 , 
\f0\b \cf2 true
\f1\b0 \cf0 )\cf3 ;\uc0\u8232 \u8232         
\f2\i \cf4 //Initialize our plugin's settings\uc0\u8232         
\f0\i0\b \cf2 if
\f1\b0 \cf0 ( Aware.
\f2\i getSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 MODE_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf0 ).length() == \cf7 0 \cf0 ) \{\uc0\u8232             Aware.
\f2\i setSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 MODE_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf3 , \cf7 1\cf0 )\cf3 ;\uc0\u8232         \cf0 \}\uc0\u8232 \u8232         
\f0\b \cf5 CONTEXT_PRODUCER 
\f1\b0 \cf0 = 
\f0\b \cf2 new 
\f1\b0 \cf0 ContextProducer() \{\uc0\u8232             \cf8 @Override\uc0\u8232             
\f0\b \cf2 public void 
\f1\b0 \cf0 onContext() \{\uc0\u8232                 Intent context_solar_charger = 
\f0\b \cf2 new 
\f1\b0 \cf0 Intent()\cf3 ;\uc0\u8232                 \cf0 context_solar_charger.setAction(
\f3\i\b \cf5 ACTION_AWARE_PLUGIN_SOLAR_CHARGER1
\f1\i0\b0 \cf0 )\cf3 ;\uc0\u8232 \u8232                 
\f2\i \cf4 /*\uc0\u8232                 public static final String CHARGER_TYPE = "double_charger_type";   //1=solar, 2= pc ,3=ac\u8232                 public static final String PERCENTAGE_START = "double_percentage_start";    // power percentages\u8232                 public static final String PERCENTAGE_END = "double_percentage_end";    //\u8232                 public static final String TIME_START = "double_time_start";    //timestamp\u8232                 public static final String TIME_END = "double_time_end";   //\u8232                 */\u8232 \u8232 \u8232                 
\f1\i0 \cf0 context_solar_charger.putExtra(
\f3\i\b \cf5 EXTRA_CHARGER_TYPE
\f1\i0\b0 \cf3 , 
\f2\i \cf5 charger_type
\f1\i0 \cf0 )\cf3 ;\uc0\u8232                 \cf0 context_solar_charger.putExtra(
\f3\i\b \cf5 EXTRA_PERCENTAGE_START
\f1\i0\b0 \cf3 , 
\f2\i \cf5 percentage_start
\f1\i0 \cf0 )\cf3 ;\uc0\u8232                 \cf0 context_solar_charger.putExtra(
\f3\i\b \cf5 EXTRA_PERCENTAGE_END
\f1\i0\b0 \cf3 , 
\f2\i \cf5 percentage_end
\f1\i0 \cf0 )\cf3 ;\uc0\u8232                 \cf0 context_solar_charger.putExtra(
\f3\i\b \cf5 EXTRA_TIME_START
\f1\i0\b0 \cf3 , 
\f2\i \cf5 time_start
\f1\i0 \cf0 )\cf3 ;\uc0\u8232                 \cf0 context_solar_charger.putExtra(
\f3\i\b \cf5 EXTRA_TIME_END
\f1\i0\b0 \cf3 , 
\f2\i \cf5 time_end
\f1\i0 \cf0 )\cf3 ;\uc0\u8232                 \cf0 sendBroadcast(context_solar_charger)\cf3 ;\uc0\u8232             \cf0 \}\uc0\u8232         \}\cf3 ;\uc0\u8232         
\f2\i \cf5 context_producer 
\f1\i0 \cf0 = 
\f0\b \cf5 CONTEXT_PRODUCER
\f1\b0 \cf3 ;\uc0\u8232 \u8232         
\f0\b \cf5 DATABASE_TABLES 
\f1\b0 \cf0 = Provider.
\f3\i\b \cf5 DATABASE_TABLES
\f1\i0\b0 \cf3 ;\uc0\u8232         
\f0\b \cf5 TABLES_FIELDS 
\f1\b0 \cf0 = Provider.
\f3\i\b \cf5 TABLES_FIELDS
\f1\i0\b0 \cf3 ;\uc0\u8232         
\f0\b \cf5 CONTEXT_URIS 
\f1\b0 \cf0 = 
\f0\b \cf2 new 
\f1\b0 \cf0 Uri[]\{ SolarCharger1_Data.
\f3\i\b \cf5 CONTENT_URI 
\f1\i0\b0 \cf0 \}\cf3 ;\uc0\u8232         
\f2\i \cf4 //To sync data to the server, you'll need to set this variables from your ContentProvider\uc0\u8232         //DATABASE_TABLES =\u8232         //TABLES_FIELDS =\u8232         //CONTEXT_URIS = new Uri[]\{ \}\u8232 \u8232         //Ask AWARE to apply your settings\u8232         
\f1\i0 \cf0 Intent SolarIntent = 
\f0\b \cf2 new 
\f1\b0 \cf0 Intent(
\f0\b \cf2 this
\f1\b0 \cf3 , \cf0 SolarSucker.
\f0\b \cf2 class
\f1\b0 \cf0 )\cf3 ;\uc0\u8232         
\f0\b \cf5 alarmManager 
\f1\b0 \cf0 = (AlarmManager) getSystemService(
\f3\i\b \cf5 ALARM_SERVICE
\f1\i0\b0 \cf0 )\cf3 ;\uc0\u8232         
\f0\b \cf5 detectTask 
\f1\b0 \cf0 = PendingIntent.
\f2\i getService
\f1\i0 (getApplicationContext()\cf3 , \cf7 0\cf3 , \cf0 SolarIntent\cf3 , \cf0 PendingIntent.
\f3\i\b \cf5 FLAG_UPDATE_CURRENT
\f1\i0\b0 \cf0 )\cf3 ;\uc0\u8232         
\f0\b \cf5 alarmManager
\f1\b0 \cf0 .setInexactRepeating(AlarmManager.
\f3\i\b \cf5 RTC_WAKEUP
\f1\i0\b0 \cf3 , \cf0 System.
\f2\i currentTimeMillis
\f1\i0 ()+\cf7 1000\cf3 , \cf7 20 \cf0 * \cf7 1000\cf3 , 
\f0\b \cf5 detectTask
\f1\b0 \cf0 )\cf3 ;\uc0\u8232         \cf0 getApplicationContext().startService(SolarIntent)\cf3 ;\uc0\u8232 \u8232     \cf0 \}\uc0\u8232 \u8232 \u8232     
\f0\b \cf2 public static class 
\f1\b0 \cf0 SolarSucker 
\f0\b \cf2 extends 
\f1\b0 \cf0 IntentService \{\uc0\u8232         
\f0\b \cf2 public 
\f1\b0 \cf0 SolarSucker() \{\uc0\u8232             
\f0\b \cf2 super
\f1\b0 \cf0 (
\f2\i \cf5 TAG
\f1\i0 \cf0 )\cf3 ;\uc0\u8232         \cf0 \}\uc0\u8232 \u8232         \cf8 @Override\uc0\u8232         
\f0\b \cf2 protected void 
\f1\b0 \cf0 onHandleIntent(Intent intent) \{\uc0\u8232             
\f0\b \cf2 if
\f1\b0 \cf0 (Integer.
\f2\i parseInt
\f1\i0 (Aware.
\f2\i getSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 MODE_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf0 ))==\cf7 3\cf0 ) \{ 
\f2\i \cf4 //charge to full\uc0\u8232                 \cf5 play 
\f1\i0 \cf0 = \cf7 1\cf3 ;\uc0\u8232             \cf0 \}\uc0\u8232             
\f0\b \cf2 if
\f1\b0 \cf0 (Integer.
\f2\i parseInt
\f1\i0 (Aware.
\f2\i getSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 MODE_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf0 ))!=\cf7 3\cf0 ) \{ 
\f2\i \cf4 //charge to full\uc0\u8232                 \cf5 play 
\f1\i0 \cf0 = \cf7 0\cf3 ;\uc0\u8232             \cf0 \}\uc0\u8232             
\f0\b \cf2 if
\f1\b0 \cf0 (
\f2\i \cf5 play
\f1\i0 \cf0 ==\cf7 1\cf0 ) \{\uc0\u8232                 
\f2\i \cf4 //Log.d(TAG, "Service running");\uc0\u8232                 \cf5 mp 
\f1\i0 \cf0 = MediaPlayer.
\f2\i create
\f1\i0 (
\f0\b \cf2 this
\f1\b0 \cf3 , \cf0 R.raw.
\f3\i\b \cf5 music
\f1\i0\b0 \cf0 )\cf3 ;\uc0\u8232                 
\f0\b \cf2 try 
\f1\b0 \cf0 \{\uc0\u8232                     
\f2\i \cf5 mp
\f1\i0 \cf0 .setLooping(
\f0\b \cf2 false
\f1\b0 \cf0 )\cf3 ;\uc0\u8232                     
\f2\i \cf4 //Log.d(TAG, "ready to start");\uc0\u8232                     \cf5 mp
\f1\i0 \cf0 .start()\cf3 ;\uc0\u8232                     
\f2\i \cf4 //Log.d(TAG, "started");\uc0\u8232                 
\f1\i0 \cf0 \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (IllegalArgumentException e) \{\uc0\u8232                     
\f2\i \cf4 //Log.d(TAG, "120");\uc0\u8232                     // handle exception\u8232                 
\f1\i0 \cf0 \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (IllegalStateException e) \{\uc0\u8232                     
\f2\i \cf4 //Log.d(TAG, "123");\uc0\u8232                     // handle exception\u8232                 
\f1\i0 \cf0 \}\uc0\u8232                 
\f2\i \cf5 mp
\f1\i0 \cf0 .setOnCompletionListener(
\f0\b \cf2 new 
\f1\b0 \cf0 MediaPlayer.OnCompletionListener() \{\uc0\u8232                                                
\f0\b \cf2 public void 
\f1\b0 \cf0 onCompletion(MediaPlayer mp) \{\uc0\u8232                                                    
\f2\i \cf4 //Log.d(TAG, "127");\uc0\u8232                                                    
\f0\i0\b \cf2 if
\f1\b0 \cf0 (Aware.
\f2\i getSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 STATUS_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf0 ).equals(
\f0\b \cf6 "false"
\f1\b0 \cf0 ))\uc0\u8232                                                    \{\u8232                                                        mp.stop()\cf3 ;\uc0\u8232                                                    \cf0 \}\uc0\u8232 \u8232                                                    mp.release()\cf3 ;\uc0\u8232                                                \cf0 \}\uc0\u8232                                            \}\u8232                 )\cf3 ;\uc0\u8232                 
\f2\i \cf5 mp
\f1\i0 \cf0 .setOnErrorListener(
\f0\b \cf2 new 
\f1\b0 \cf0 MediaPlayer.OnErrorListener() \{\uc0\u8232                     \cf8 @Override\uc0\u8232                     
\f0\b \cf2 public boolean 
\f1\b0 \cf0 onError(MediaPlayer mp\cf3 , 
\f0\b \cf2 int 
\f1\b0 \cf0 what\cf3 , 
\f0\b \cf2 int 
\f1\b0 \cf0 extra) \{\uc0\u8232                         
\f2\i \cf4 //Log.d(TAG, "131");\uc0\u8232                         
\f0\i0\b \cf2 return false
\f1\b0 \cf3 ;\uc0\u8232                     \cf0 \}\uc0\u8232                 \})\cf3 ;\uc0\u8232             \cf0 \}\uc0\u8232             
\f2\i \cf4 //Log.d(TAG, "138");\uc0\u8232             \cf5 context_producer
\f1\i0 \cf0 .onContext()\cf3 ;\uc0\u8232         \cf0 \}\uc0\u8232     \}\u8232 \u8232     \cf8 @Override\uc0\u8232     
\f0\b \cf2 public void 
\f1\b0 \cf0 onDestroy() \{\uc0\u8232         
\f0\b \cf2 super
\f1\b0 \cf0 .onDestroy()\cf3 ;\uc0\u8232 \u8232         
\f0\b \cf5 alarmManager
\f1\b0 \cf0 .cancel(
\f0\b \cf5 detectTask
\f1\b0 \cf0 )\cf3 ;\uc0\u8232         \cf0 Aware.
\f2\i setSetting
\f1\i0 (getApplicationContext()\cf3 , \cf0 Settings.
\f3\i\b \cf5 STATUS_PLUGIN_SOLARCHARGER1
\f1\i0\b0 \cf3 , 
\f0\b \cf2 false
\f1\b0 \cf0 )\cf3 ;\uc0\u8232 \u8232         
\f2\i \cf4 //Deactivate any sensors/plugins you activated here\uc0\u8232         //...\u8232 \u8232         //Ask AWARE to apply your settings\u8232         
\f1\i0 \cf0 sendBroadcast(
\f0\b \cf2 new 
\f1\b0 \cf0 Intent(Aware.
\f3\i\b \cf5 ACTION_AWARE_REFRESH
\f1\i0\b0 \cf0 ))\cf3 ;\uc0\u8232     \cf0 \}\uc0\u8232 \}\u8232 \
}